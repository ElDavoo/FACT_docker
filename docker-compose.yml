# FACT_DOCKER_DOCKER_GID
# - The group id of the docker group on the host
# FACT_DOCKER_DOCKER_MOUNT_BASE_DIR
# - Path to the docker-mount-base-dir as specified in fact-core-config.toml
# FACT_DOCKER_FIRMWARE_FILE_STORAGE_DIR
# - Path to the firmware-file-storage-directory as specified in fact-core-config.toml
# FACT_DOCKER_FIRMWARE_FILE_STORAGE_DIR_GID
# - The group id of the group of FACT_DOCKER_FIRMWARE_FILE_STORAGE_DIR
# FACT_DOCKER_FRONTEND_PORT
# - The port that the webserver should run on
# FACT_DOCKER_MAIN_CFG_PATH
# - Path to the main FACT config fact-core-config.toml
# FACT_DOCKER_POSTGRES_PASSWORD
# - Password for postgres admin user
# FACT_DOCKER_UWSGI_CONFIG_INI_PATH
# - Path to the uwsgi-config.ini

services:

  cf-tunnel:
    image: cloudflare/cloudflared
    hostname: cf-tunnel
    restart: unless-stopped
    networks:
      - fact-network
    depends_on:
      - fact-frontend
    command: tunnel --no-autoupdate run
    volumes:
      - /etc/localtime:/etc/localtime:ro
    environment:
      - "TUNNEL_TOKEN=${TUNNEL_TOKEN}"
    cpu_shares: 800
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 30M

  radare:
    #image: fkiecad/radare-web-gui:latest
    build: docker-radare-web-gui
    restart: on-failure
    networks:
      - fact-network

  nginx:
    build: ./nginx
    networks:
      - fact-network
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - fact-frontend


  fact-frontend:
    # local build
    image: fact-core-frontend
    # official build
    # image: fkiecad/fact-core-frontend

    #entrypoint:
    # - "sh"
    #  - "-c"
    #  - |
    #    . /opt/FACT_core/venv/bin/activate &&
    #    python3 -Xfrozen_modules=off -m debugpy --listen 0.0.0.0:5001 \
    #    /opt/FACT_core/src/start_fact_frontend.py
    #command: start-frontend
    environment:
      - INSIDE_DOCKER=true
    ports:
      - "${FACT_DOCKER_FRONTEND_PORT:-5000}:5000"
      - 5001:5001
    networks:
      - fact-network
    group_add:
      - "${FACT_DOCKER_DOCKER_GID}"
    volumes:
        # This is needed for generating pdf reports.
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
      - type: bind
        source: "${FACT_DOCKER_DOCKER_MOUNT_BASE_DIR}"
        target: /tmp/fact-docker-mount-base-dir/
      - type: bind
        source: "${FACT_DOCKER_MAIN_CFG_PATH}"
        target: /opt/FACT_core/src/config/fact-core-config.toml
      - type: bind
        source: "${FACT_DOCKER_UWSGI_CONFIG_INI_PATH}"
        target: /opt/FACT_core/src/config/uwsgi_config.ini
      - type: bind
        source: "${FACT_DOCKER_AUTH_DATA_FILE}"
        target: /media/data/fact_auth_data/fact_users.db

    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy
      fact-backend:
        # TODO healthcheck?
        condition: service_started

  fact-backend:
    # local build
    image: fact-core-backend
    # official build
    # image: fkiecad/fact-core-backend

    #entrypoint:
    #  - "sh"
    #  - "-c"
    #  - |
    #    . /opt/FACT_core/venv/bin/activate &&
    #    python3 -Xfrozen_modules=off -m debugpy --listen 0.0.0.0:5002 \
    #    /opt/FACT_core/src/start_fact_backend.py
    ports:
      - "5002:5002"
    #command: start-backend
    environment:
      - INSIDE_DOCKER=true
    networks:
      - fact-network
    group_add:
      - "${FACT_DOCKER_DOCKER_GID}"
      - "${FACT_DOCKER_FIRMWARE_FILE_STORAGE_DIR_GID}"
    volumes:
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
      - type: bind
        source: "${FACT_DOCKER_MAIN_CFG_PATH}"
        target: /opt/FACT_core/src/config/fact-core-config.toml
      - type: bind
        source: "${FACT_DOCKER_UWSGI_CONFIG_INI_PATH}"
        target: /opt/FACT_core/src/config/uwsgi_config.ini
      - type: bind
        source: "${FACT_DOCKER_DOCKER_MOUNT_BASE_DIR}"
        target: /tmp/fact-docker-mount-base-dir/
      - type: bind
        source: "${FACT_DOCKER_FIRMWARE_FILE_STORAGE_DIR}"
        target: /media/data/fact_fw_data
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy

  database:
    image: postgres:16.2-alpine
    ports:
      - "5432:5432"
    networks:
      - fact-network
    environment:
        POSTGRES_PASSWORD: "${FACT_DOCKER_POSTGRES_PASSWORD}"
    expose:
      - 5432
    volumes:
      - fact_postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 3s
      timeout: 2s
      retries: 3
      start_period: 20s

  redis:
    image: redis:7.2-alpine
    networks:
      - fact-network
    expose:
      - 6379
    healthcheck:
      test: "[ $$(redis-cli ping) = 'PONG' ]"
      interval: 3s
      timeout: 2s
      retries: 3
      start_period: 10s

  

networks:
  fact-network: {}

volumes:
  fact_postgres_data:
    external: true
