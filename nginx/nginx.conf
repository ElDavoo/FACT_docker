worker_processes auto;

events {
	worker_connections 768;
}

http {

	sendfile on;
	access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log;
	gzip on;

	#workaround to not let nginx crash when the upstream is not available
	resolver 127.0.0.11 valid=30s;

	#hack for https://github.com/radareorg/radare2/issues/22818
	more_clear_headers '(null)Connection';

	server {
		listen 80;
		client_max_body_size 128M;

		location / {
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_pass http://fact-frontend:5000/;
		}

		location ~ ^/radare-api/(.*)$ {
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			set $rdr http://radare:8080;
			proxy_pass $rdr/$1$is_args$args;
		}

		location ~ ^/radare1/(.*)$ {
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			set $rdr http://radare:8001;
			proxy_pass $rdr/$1$is_args$args;
		}

		location ~ ^/radare2/(.*)$ {
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			set $rdr http://radare:8002;
			proxy_pass $rdr/$1$is_args$args;
		}
		
		location ~ ^/radare3/(.*)$ {
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			set $rdr http://radare:8003;
			proxy_pass $rdr/$1$is_args$args;
		}
		
		location ~ ^/radare4/(.*)$ {
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			set $rdr http://radare:8004;
			proxy_pass $rdr/$1$is_args$args;
		}

	}
}

